{"version":3,"sources":["webpack:///./src/app/add-post/add-post.module.ts","webpack:///./src/app/add-post/add-post.routing.ts","webpack:///./src/app/add-post/create-post/create-category/create-category.component.html","webpack:///./src/app/add-post/create-post/create-category/create-category.component.scss","webpack:///./src/app/add-post/create-post/create-category/create-category.component.ts","webpack:///./src/app/add-post/create-post/create-location/create-location.component.html","webpack:///./src/app/add-post/create-post/create-location/create-location.component.scss","webpack:///./src/app/add-post/create-post/create-location/create-location.component.ts","webpack:///./src/app/add-post/create-post/create-post-content/create-post-content.component.html","webpack:///./src/app/add-post/create-post/create-post-content/create-post-content.component.scss","webpack:///./src/app/add-post/create-post/create-post-content/create-post-content.component.ts","webpack:///./src/app/add-post/create-post/create-post.component.html","webpack:///./src/app/add-post/create-post/create-post.component.scss","webpack:///./src/app/add-post/create-post/create-post.component.ts","webpack:///./src/app/add-post/create-post/create-tag/create-tag.component.html","webpack:///./src/app/add-post/create-post/create-tag/create-tag.component.scss","webpack:///./src/app/add-post/create-post/create-tag/create-tag.component.ts","webpack:///./src/app/core/services/post-category.service.ts","webpack:///./src/app/core/services/province-city.service.ts","webpack:///./src/app/core/services/tag.service.ts","webpack:///./src/app/model/tag.model.ts"],"names":[],"mappings":"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","file":"src-app-add-post-add-post-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AddPostRoutingModule } from './add-post.routing';\r\nimport { CreatePostComponent } from './create-post/create-post.component';\r\nimport { CreateTagComponent } from './create-post/create-tag/create-tag.component';\r\nimport { CreatePostContentComponent } from './create-post/create-post-content/create-post-content.component';\r\nimport { CreateLocationComponent } from './create-post/create-location/create-location.component';\r\nimport { CreateCategoryComponent } from './create-post/create-category/create-category.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AddPostRoutingModule\r\n  ],\r\n  exports: [],\r\n  declarations: [CreatePostComponent,\r\n    CreateTagComponent, CreatePostContentComponent, CreateLocationComponent, CreateCategoryComponent]\r\n})\r\nexport class AddPostModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreatePostComponent } from './create-post/create-post.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CreatePostComponent },\r\n  { path: ':id', component: CreatePostComponent },\r\n  { path: '**', redirectTo: '/not-found' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostRoutingModule { }\r\n\r\nexport const routedComponents = [CreatePostComponent];\r\n","module.exports = \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-12 p-0\\\">\\r\\n        <!-- row1 has label, dropdown and button Add -->\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xl-2 col-md-3\\\">\\r\\n                <label>{{ compLanguage.createPostCategory }}</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-10 col-md-9\\\">\\r\\n                <select class=\\\"form-control\\\" #selectCate (change)=\\\"onSelectCategory($event)\\\" (click)=\\\"onClickSelect(selectCate)\\\">\\r\\n                <!-- <select class=\\\"form-control\\\"> -->\\r\\n                    <option [value]=\\\"postCategory.name\\\" *ngFor=\\\"let postCategory of allCategories\\\">{{\\r\\n                        postCategory.name }}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- row2 has list all postCategories added, each category can delete by a X button on top-right -->\\r\\n        <div class=\\\"row d-block\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"tag\\\" *ngFor=\\\"let category of post.categories\\\">\\r\\n                    {{ category.name }}<span class=\\\"fas fa-times-circle remove-btn\\\" (click)=\\\"onRemoveCategory(category, selectCate)\\\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"select {\\n  width: 100%;\\n  font-size: 17px;\\n  height: auto; }\\n  select option {\\n    font-size: 17px; }\\n  label {\\n  font-size: 17px;\\n  font-weight: bold; }\\n  .tag {\\n  font-size: 14px;\\n  font-weight: bold;\\n  margin-top: 15px;\\n  margin-right: 15px;\\n  padding: 10px;\\n  border-color: transparent;\\n  border-radius: 0.5rem;\\n  background-color: lightgray;\\n  overflow: visible;\\n  position: relative;\\n  display: inline-block;\\n  cursor: default; }\\n  .remove-btn {\\n  font-size: 14px;\\n  position: absolute;\\n  top: -6px;\\n  right: -6px;\\n  cursor: pointer; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostCategory } from 'src/app/model/postCategory.model';\r\nimport { PostCategoryService } from 'src/app/core/services/post-category.service';\r\nimport { Post } from 'src/app/model/post.model';\r\nimport { PostService } from 'src/app/core/services/post.service';\r\n\r\n@Component({\r\n  selector: 'app-create-category',\r\n  templateUrl: './create-category.component.html',\r\n  styleUrls: ['./create-category.component.scss']\r\n})\r\nexport class CreateCategoryComponent implements OnInit {\r\n  // @Input() localCategories: PostCategory[] = [];\r\n  @Input() post: Post;\r\n  @Input() compLanguage;\r\n  allCategories: PostCategory[] = [];\r\n\r\n  constructor(private postCategoryService: PostCategoryService, private postService: PostService) { }\r\n\r\n  ngOnInit() {\r\n    this.postCategoryService.newCategoriesUpdated.asObservable()\r\n      .subscribe(() => {\r\n        // update allCategories same as data on service\r\n        this.allCategories = this.postCategoryService.allCategories;\r\n      });\r\n    this.postCategoryService.getAllCategories();\r\n  }\r\n\r\n  // this event happen before user choose new category to reset select value\r\n  onClickSelect(selectCate: HTMLSelectElement) {\r\n    selectCate.value = '';\r\n  }\r\n\r\n  onSelectCategory(event: Event) {\r\n    // get selectedCategory\r\n    const selectedCategory = (event.target as HTMLSelectElement).value;\r\n    // check if post has selectedCategory or not\r\n    const duplicateCategory = this.post.categories.find((eachEle) => {\r\n      return eachEle.name === selectedCategory;\r\n    });\r\n    if (duplicateCategory === undefined || duplicateCategory === null) {\r\n      // if not yet, create newCategory from allCategories\r\n      const newCategory = this.allCategories.find((eachEleInALL) => {\r\n        return eachEleInALL.name.toLowerCase() === selectedCategory.toLowerCase();\r\n      });\r\n      if (newCategory !== null && newCategory !== undefined) {\r\n        // push that newCategory to post.categories\r\n        this.post.categories.push(newCategory);\r\n      } else {\r\n        // user choose a category that not exist => hacker\r\n      }\r\n    }\r\n    // emit event\r\n    this.postService.categoryChanged.next();\r\n  }\r\n\r\n  onRemoveCategory(removedCategory: PostCategory, selectEle: HTMLSelectElement) {\r\n    // filt out the removedCategory\r\n    this.post.categories = this.post.categories.filter((eachEle) => {\r\n      return eachEle.name !== removedCategory.name;\r\n    });\r\n    // emit event\r\n    this.postService.categoryChanged.next();\r\n  }\r\n}\r\n","module.exports = \"<!-- row1 has location name -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-2 col-md-3 col-12\\\">\\r\\n    <label>{{ compLanguage.createPostPlace }}</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n    <!-- <input type=\\\"text\\\" name=\\\"place\\\" class=\\\"form-control\\\" placeholder=\\\"Nha Trang beach\\\"> -->\\r\\n    <input type=\\\"text\\\" name=\\\"place\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostPlacePlaceholder\\\"\\r\\n      [value]=\\\"post.location.locationName\\\" (blur)=\\\"onUpdatePlace($event)\\\" maxlength=\\\"200\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n<!-- row2 has location address -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-2 col-md-3 col-12\\\">\\r\\n    <label>{{ compLanguage.createPostAddress }}</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n    <!-- <input type=\\\"text\\\" name=\\\"address\\\" class=\\\"form-control\\\" placeholder=\\\"No.1 Vo Van Ngan\\\"> -->\\r\\n    <input type=\\\"text\\\" name=\\\"address\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostAddressPlaceholder\\\"\\r\\n      [value]=\\\"post.location.address\\\" (blur)=\\\"onUpdateAddress($event)\\\" maxlength=\\\"300\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n<!-- row3 has select box for province -->\\r\\n<div class=\\\"row\\\">\\r\\n  <!-- col1 has label -->\\r\\n  <div class=\\\"col-xl-2 col-md-3 col-12\\\">\\r\\n    <label>{{ compLanguage.createPostProvinceCity }}</label>\\r\\n  </div>\\r\\n  <!-- col3 has selectList as multiple -->\\r\\n  <div class=\\\"col-xl-4 col-md-9 col-12 margin-bottom-15\\\">\\r\\n    <!-- <input type=\\\"text\\\" name=\\\"province\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostFindProvinceCity\\\"> -->\\r\\n    <select class=\\\"form-control\\\" multiple>\\r\\n      <!-- ngFor here -->\\r\\n      <option *ngFor=\\\"let province of allProvCity\\\" [value]=\\\"province.provinceName\\\" (click)=\\\"onSelectProvince(province.provinceName)\\\">{{\\r\\n        province.provinceName }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <!-- col4 has result of multiple selectList -->\\r\\n  <div class=\\\"col-xl-6 col-md-12 col-12\\\">\\r\\n    <!-- ngFor here -->\\r\\n    <div class=\\\"tag\\\" *ngFor=\\\"let province of post.location.provinceCity\\\">\\r\\n      {{ province }}<span class=\\\"fas fa-times-circle esc-btn\\\" (click)=\\\"onRemoveProvince(province)\\\"></span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"label {\\n  font-size: 17px;\\n  font-weight: bold; }\\n\\ninput {\\n  font-size: 17px;\\n  height: auto; }\\n\\n.fixed-height {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\nselect {\\n  height: 140px !important; }\\n\\nselect option {\\n    font-size: 17px; }\\n\\n.margin-bottom-15 {\\n  margin-bottom: 15px; }\\n\\n.tag {\\n  font-size: 14px;\\n  font-weight: bold;\\n  margin-right: 15px;\\n  margin-bottom: 15px;\\n  padding: 10px;\\n  border-color: transparent;\\n  border-radius: 0.5rem;\\n  background-color: lightgray;\\n  cursor: default;\\n  overflow: visible;\\n  position: relative;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  display: inline-block; }\\n\\n.esc-btn {\\n  font-size: 14px;\\n  position: absolute;\\n  top: -6px;\\n  right: -6px;\\n  cursor: pointer; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Location } from 'src/app/model/location.model';\r\nimport { ProvinceCityService } from 'src/app/core/services/province-city.service';\r\nimport { ProvinceCity } from 'src/app/model/province-city.model';\r\nimport { ServerService } from 'src/app/core/services/server.service';\r\nimport { Post } from 'src/app/model/post.model';\r\nimport { PostService } from 'src/app/core/services/post.service';\r\n\r\n@Component({\r\n  selector: 'app-create-location',\r\n  templateUrl: './create-location.component.html',\r\n  styleUrls: ['./create-location.component.scss']\r\n})\r\nexport class CreateLocationComponent implements OnInit {\r\n  // @Input() location: Location = new Location('', [], '', '');\r\n  @Input() post: Post;\r\n  @Input() compLanguage;\r\n  allProvCity: ProvinceCity[] = [];\r\n  allLocations: Location[] = [];\r\n\r\n  constructor(private provCityService: ProvinceCityService, private postService: PostService, private serverService: ServerService) { }\r\n\r\n  ngOnInit() {\r\n    // call service to get all province - city\r\n    // if all province are already exist in provCityService, dont need to call server\r\n    if (this.provCityService.allProvinceCity.length > 0) {\r\n      this.allProvCity = this.provCityService.allProvinceCity;\r\n    } else {\r\n      // if all province are not already exist in provCityService, get all from server and store to service\r\n      this.provCityService.getAllProvinceCity()\r\n        .subscribe((resData) => {\r\n          if (resData.data) {\r\n            this.provCityService.allProvinceCity = resData.data.sort((provinceA, provinceB) => {\r\n              if (provinceA.provinceName > provinceB.provinceName) {\r\n                return 1;\r\n              } else { return -1; }\r\n            });\r\n            this.allProvCity = this.provCityService.allProvinceCity;\r\n          }\r\n          // else err handling\r\n        });\r\n    }\r\n    // call server service to get all location bacause we dont have location-service\r\n    this.serverService.getListLocations().subscribe((resData) => {\r\n      this.allLocations = resData.data;\r\n    });\r\n  }\r\n\r\n  onRemoveProvince(removedProvince: String) {\r\n    // console.log(removedCategory);\r\n    this.post.location.provinceCity = this.post.location.provinceCity.filter((eachEle) => {\r\n      return eachEle !== removedProvince;\r\n      // return eachEle._id !== removedCategory._id;\r\n    });\r\n    // emit event\r\n    this.postService.provinceCityChanged.next();\r\n  }\r\n\r\n  onSelectProvince(selectedProvince: string) {\r\n    // check if selected province is valid, if invalid => fake province => hacker\r\n    const realProvince = this.provCityService.allProvinceCity.find((eachEle) => {\r\n      return eachEle.provinceName === selectedProvince;\r\n    });\r\n    if (realProvince !== null && realProvince !== undefined) {\r\n      // check list province if selected province is a new province\r\n      const duplicateProvince = this.post.location.provinceCity.find((eachEle) => {\r\n        return eachEle === selectedProvince;\r\n      });\r\n      // if is a new province => add the new\r\n      if (duplicateProvince === null || duplicateProvince === undefined) {\r\n        this.post.location.provinceCity.push(selectedProvince);\r\n      }\r\n    }\r\n    // emit event\r\n    this.postService.provinceCityChanged.next();\r\n  }\r\n\r\n  onUpdatePlace(event: Event) {\r\n    // validate here\r\n    this.post.location.locationName = (event.target as HTMLInputElement).value;\r\n    // emit event\r\n    this.postService.placeChanged.next();\r\n  }\r\n\r\n  onUpdateAddress(event: Event) {\r\n    // validate here\r\n    this.post.location.address = (event.target as HTMLInputElement).value;\r\n    // emit event\r\n    this.postService.addressChanged.next();\r\n  }\r\n}\r\n","module.exports = \"<!-- big row include all post content component-->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <!-- title for part post content -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 p-0\\\">\\r\\n        <h3 class=\\\"bigger\\\">{{ compLanguage.createPostTopic }}</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- list all post-content and button add more post-content -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n\\r\\n        <!-- ngfor here, each col-12 is a row and is a post-content -->\\r\\n        <div class=\\\"row myborder\\\" *ngFor=\\\"let postContent of post.postContents\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <!-- input title -->\\r\\n            <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-xl-2 col-md-3 col-12 d-sm-block d-none\\\">\\r\\n                <label>{{ compLanguage.createPostTopicTitle }}</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostTopicTitlePlaceholder\\\"\\r\\n                  [value]=\\\"postContent.title\\\" (blur)=\\\"onUpdateTopicTitle(postContent, $event)\\\" maxlength=\\\"500\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- input content -->\\r\\n            <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-xl-2 col-md-3 col-12 d-sm-block d-none\\\">\\r\\n                <label>{{ compLanguage.createPostTopicContent }}</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n                <textarea rows=\\\"2\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostTopicContentPlaceholder\\\"\\r\\n                  [value]=\\\"postContent.content\\\" (blur)=\\\"onUpdateTopicContent(postContent, $event)\\\" maxlength=\\\"3000\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- add image for content -->\\r\\n            <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-5 col-12\\\">\\r\\n                <button class=\\\"btn btn-success bold\\\" (click)=\\\"filePicker.click()\\\">{{\\r\\n                  compLanguage.createPostTopicAddImgBtn }}</button>\\r\\n                <input class=\\\"d-none\\\" type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event, postContent)\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-7 col-12\\\">\\r\\n                <!-- image preview here -->\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"postContent.image.length > 0\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <img [src]=\\\"postContent.image\\\" [alt]=\\\"postContent.imageDesc\\\">\\r\\n                    <span class=\\\"fas fa-times-circle del-img-btn\\\" (click)=\\\"onDelImageClick(postContent)\\\"></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <!-- image description here -->\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"postContent.image.length > 0\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control description\\\" [placeholder]=\\\"compLanguage.createPostTopicImgDescription\\\"\\r\\n                      [value]=\\\"postContent.imageDesc\\\" (blur)=\\\"onUpdateImgDesc(postContent, $event)\\\" maxlength=\\\"200\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <!-- button for delete topic-content -->\\r\\n            <span class=\\\"fas fa-times-circle del-content-btn\\\" (click)=\\\"onRemovePostContent(postContent)\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- last row has '+' button -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 no-padding\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success right\\\" (click)=\\\"onAddPostContent()\\\"><span class=\\\"fas fa-plus\\\"></span></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".bigger {\\n  font-size: 17px;\\n  font-weight: bold; }\\n\\nlabel {\\n  font-size: 14px;\\n  font-weight: bold; }\\n\\ninput {\\n  font-size: 14px; }\\n\\ntextarea {\\n  font-size: 14px; }\\n\\nimg {\\n  width: 100%;\\n  height: auto;\\n  border-radius: 0.25rem; }\\n\\n.myborder {\\n  border: 2px solid black;\\n  border-radius: 0.25rem;\\n  margin-bottom: 10px; }\\n\\n.bold {\\n  font-size: 14px;\\n  font-weight: bold;\\n  margin-bottom: 15px; }\\n\\n.description {\\n  font-style: italic;\\n  text-align: center; }\\n\\n.right {\\n  width: 100%; }\\n\\n.right span {\\n    font-size: 40px;\\n    font-weight: bold; }\\n\\n.no-padding {\\n  padding: 0px; }\\n\\n.del-img-btn {\\n  cursor: pointer;\\n  font-size: 14px;\\n  position: absolute;\\n  top: -8px;\\n  right: 5px; }\\n\\n.del-content-btn {\\n  cursor: pointer;\\n  font-size: 14px;\\n  position: absolute;\\n  top: 2px;\\n  right: 2px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostContent } from 'src/app/model/postContent.model';\r\nimport { PostService } from 'src/app/core/services/post.service';\r\nimport { Post } from 'src/app/model/post.model';\r\n\r\n@Component({\r\n  selector: 'app-create-post-content',\r\n  templateUrl: './create-post-content.component.html',\r\n  styleUrls: ['./create-post-content.component.scss']\r\n})\r\n\r\nexport class CreatePostContentComponent implements OnInit {\r\n  // @Input() postContents: PostContent[] = [];\r\n  @Input() post: Post;\r\n  @Input() compLanguage;\r\n\r\n  constructor(private postService: PostService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onImagePicked(event: Event, addedImgPostContent: PostContent) {\r\n    if (addedImgPostContent !== null && addedImgPostContent !== undefined) {\r\n      const file = (event.target as HTMLInputElement).files[0];\r\n      // config reader to read file and show preview\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        addedImgPostContent.image = reader.result.toString();\r\n      };\r\n      reader.readAsDataURL(file);\r\n      // emit file and id of postContent to store temporarily on createPostComponent\r\n      this.postService.hasNewImage.next({ imgFile: file, contentId: addedImgPostContent._id });\r\n    }\r\n    // reset the <input> file for the next time\r\n    (event.target as HTMLInputElement).value = '';\r\n  }\r\n\r\n  onDelImageClick(removedImgPostContent: PostContent) {\r\n    // delete image url\r\n    removedImgPostContent.image = '';\r\n    // emit event hasImgDeleted\r\n    this.postService.hasImgDeleted.next(removedImgPostContent._id);\r\n  }\r\n\r\n  onRemovePostContent(removedPostContent: PostContent) {\r\n    // filt out the removed postContent\r\n    this.post.postContents = this.post.postContents.filter((eachEle) => {\r\n      return eachEle._id !== removedPostContent._id;\r\n    });\r\n    // emit event hasImgDeleted\r\n    this.postService.hasImgDeleted.next(removedPostContent._id);\r\n    // emit event postContentChanged\r\n    this.postService.postContentChanged.next();\r\n  }\r\n\r\n  onAddPostContent() {\r\n    // create temp PostContent with fake Id\r\n    const tempPostContent = new PostContent('', '', '', '');\r\n    // fake Id\r\n    tempPostContent._id = new Date().toUTCString();\r\n    this.post.postContents.push(tempPostContent);\r\n    // emit event postContentChanged\r\n    this.postService.postContentChanged.next();\r\n  }\r\n\r\n  onUpdateTopicTitle(updatedPostContent: PostContent, event: Event) {\r\n    const needUpdatedPostContent = this.post.postContents.find((eachEle) => {\r\n      return eachEle._id === updatedPostContent._id;\r\n    });\r\n    // validate here\r\n    needUpdatedPostContent.title = (event.target as HTMLInputElement).value;\r\n  }\r\n\r\n  onUpdateTopicContent(updatedPostContent: PostContent, event: Event) {\r\n    const needUpdatedPostContent = this.post.postContents.find((eachEle) => {\r\n      return eachEle._id === updatedPostContent._id;\r\n    });\r\n    // validate here\r\n    needUpdatedPostContent.content = (event.target as HTMLTextAreaElement).value;\r\n  }\r\n\r\n  onUpdateImgDesc(updatedPostContent: PostContent, event: Event) {\r\n    const needUpdatedPostContent = this.post.postContents.find((eachEle) => {\r\n      return eachEle._id === updatedPostContent._id;\r\n    });\r\n    // validate here\r\n    needUpdatedPostContent.imageDesc = (event.target as HTMLInputElement).value;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row m-0 p-3 comp\\\">\\r\\n  <div class=\\\"col-md-7 p-2 content\\\">\\r\\n    <div class=\\\"row m-0 p-0 hidden-scroll\\\">\\r\\n      <div class=\\\"col-12 p-0 max-height\\\">\\r\\n        <!-- on top is invalid alert -->\\r\\n        <div class=\\\"row m-0\\\" *ngIf=\\\"alertContent.length > 0\\\">\\r\\n          <div class=\\\"col-12 p-3 alert alert-danger pre-line\\\">\\r\\n            {{ alertContent }}\\r\\n            <!-- button for delete topic-content -->\\r\\n            <!-- <span class=\\\"fas fa-times-circle del-content-btn\\\"></span> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row1 has title -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-xl-2 col-md-3 col-12\\\">\\r\\n            <!-- <label>Title:</label> -->\\r\\n            <label>{{ compLanguage.createPostTitle }}</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"title\\\" [placeholder]=\\\"compLanguage.createPostTitlePlaceholder\\\"\\r\\n              [value]=\\\"post.title\\\" (blur)=\\\"onUpdateTitle($event)\\\" maxlength=\\\"200\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row2 has description -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-xl-2 col-md-3 col-12\\\">\\r\\n            <!-- <label>Description:</label> -->\\r\\n            <label>{{ compLanguage.createPostDescription }}</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-xl-10 col-md-9 col-12\\\">\\r\\n            <textarea name=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"2\\\" [placeholder]=\\\"compLanguage.createPostDescriptionPlaceholder\\\"\\r\\n              [value]=\\\"post.description\\\" (blur)=\\\"onUpdateDescription($event)\\\" maxlength=\\\"500\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row3 has add-cover-button and preview -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-5 col-12\\\">\\r\\n            <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">{{\\r\\n              compLanguage.createPostAddCoverBtn }}</button>\\r\\n            <input class=\\\"d-none\\\" type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-7 col-12\\\" *ngIf=\\\"post.cover.length > 0\\\">\\r\\n            <img [src]=\\\"post.cover\\\" alt=\\\"preview\\\">\\r\\n            <span class=\\\"fas fa-times-circle esc-btn\\\" (click)=\\\"onDelImageClick()\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row4 has create-category component -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <app-create-category [post]=\\\"post\\\" [compLanguage]='compLanguage'></app-create-category>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row5 has create-tag component -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <app-create-tag [post]='post' [compLanguage]='compLanguage'></app-create-tag>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row6 has create-location component -->\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <app-create-location [post]=\\\"post\\\" [compLanguage]='compLanguage'></app-create-location>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row7 has create-post-content component -->\\r\\n        <div class=\\\"row form-group m-0\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <app-create-post-content [post]='post' [compLanguage]='compLanguage'></app-create-post-content>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- at the bottom has same invalid alert before save button-->\\r\\n        <div class=\\\"row m-0\\\" *ngIf=\\\"alertContent.length > 0\\\">\\r\\n          <div class=\\\"col-12 p-3 alert alert-danger pre-line\\\">\\r\\n            {{ alertContent }}\\r\\n            <!-- button for delete topic-content -->\\r\\n            <!-- <span class=\\\"fas fa-times-circle del-content-btn\\\"></span> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row alert inform that post save successfully -->\\r\\n        <div class=\\\"row m-0\\\" *ngIf=\\\"isSaved === true\\\">\\r\\n          <div class=\\\"col-12 p-3 alert alert-success\\\">\\r\\n            <a class=\\\"alert-link pointer\\\" (click)=\\\"onViewPost()\\\">{{ savedSuccessAlertContent }}</a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- row8 has save button -->\\r\\n        <div class=\\\"row form-group m-0\\\">\\r\\n          <div class=\\\"col-12 no-padding\\\">\\r\\n            <button class=\\\"btn btn-warning\\\" (click)=\\\"onCancel()\\\">{{ compLanguage.createPostCancelBtn }}</button>\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"onSave()\\\">{{ compLanguage.createPostSaveBtn }}</button>\\r\\n            <!-- <button class=\\\"btn btn-info\\\" (click)=\\\"onTest()\\\">Test Edit</button> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".container {\\n  margin: 0px;\\n  display: block; }\\n\\n.row {\\n  padding: 5px; }\\n\\ninput[type=\\\"text\\\"] {\\n  width: 100%;\\n  font-size: 17px; }\\n\\ntextarea {\\n  width: 100%;\\n  font-size: 17px; }\\n\\n.comp {\\n  background-color: #e1e1ef;\\n  height: 100%; }\\n\\n.hidden-scroll {\\n  height: 100%;\\n  overflow-y: scroll;\\n  overflow-x: hidden; }\\n\\n.max-height {\\n  max-height: 100px; }\\n\\n.content {\\n  background-color: #fff;\\n  border-radius: 5px; }\\n\\n.hidden-scroll::-webkit-scrollbar {\\n  width: 0px;\\n  background: transparent;\\n  display: none; }\\n\\nimg {\\n  width: 100%;\\n  height: auto;\\n  border-radius: 0.25rem; }\\n\\nlabel {\\n  font-size: 17px;\\n  font-weight: bold; }\\n\\nbutton {\\n  font-size: 17px;\\n  font-weight: bold;\\n  margin-bottom: 15px; }\\n\\n.esc-btn {\\n  cursor: pointer;\\n  font-size: 14px;\\n  position: absolute;\\n  top: 0px;\\n  right: 11px; }\\n\\n.pointer {\\n  cursor: pointer; }\\n\\n.no-padding {\\n  padding-left: 0px;\\n  padding-right: 0px;\\n  text-align: right; }\\n\\n.no-padding button {\\n    margin-left: 15px; }\\n\\n.del-content-btn {\\n  cursor: pointer;\\n  font-size: 14px;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px; }\\n\\n.pre-line {\\n  white-space: pre-line; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/core/services/post.service';\r\nimport { ServerService } from 'src/app/core/services/server.service';\r\nimport { Post } from 'src/app/model/post.model';\r\nimport { ConstantService } from 'src/app/core/services/constant.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Location } from 'src/app/model/location.model';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\nimport { LanguageService } from 'src/app/core/services/language.service';\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styleUrls: ['./create-post.component.scss']\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  // local post receive data from service\r\n  // it should has init data until receiving data from server so browser will not has error\r\n  post: Post = new Post(null, null, [], [], '', '', '', new Location('', [], '', ''), [], [], '', [], '');\r\n  // if postId == '' => create new post\r\n  // if postId != '' => edit post\r\n  postId = '';\r\n  // array store new image need to upload to server\r\n  newImageFiles: { imgFile: File, contentId: string }[] = [];\r\n  coverFile: File = null;\r\n  // variable store current language\r\n  compLanguage = this.language.currentLanguage;\r\n  // variable store alert\r\n  alertContent = '';\r\n  // saved alert content\r\n  savedSuccessAlertContent = this.compLanguage.createPostAlertSaveSuccess;\r\n  // can't Saved alert content\r\n  cantSavedAlertContent = this.compLanguage.createPostAlertSaveAlready;\r\n  // validate status of the whole post\r\n  postIsValid = false;\r\n  // variable store status that save post successfully or not\r\n  // if already success => can't click save again\r\n  isSaved = false;\r\n  isUpdate = false;\r\n  // all validate status\r\n  validateObject = {\r\n    // variable check valid or not foreach properties\r\n    validateTitle: {\r\n      maxLength: { status: false, message: this.compLanguage.createPostInvalidTitleLength },\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidTitleEmpty }\r\n    },\r\n    validateDesc: {\r\n      maxLength: { status: false, message: this.compLanguage.createPostInvalidDescLength },\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidDescEmpty }\r\n    },\r\n    validateCover: {\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidCoverEmpty }\r\n    },\r\n    validateCategory: {\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidCategoryEmpty }\r\n    },\r\n    validateTag: {\r\n      maxLength: { status: false, message: this.compLanguage.createPostInvalidTagLength }\r\n    },\r\n    validatePlace: {\r\n      maxLength: { status: false, message: this.compLanguage.createPostInvalidPlaceLength },\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidPlaceEmpty }\r\n    },\r\n    validateAddress: {\r\n      maxLength: { status: false, message: this.compLanguage.createPostInvalidAddressLength }\r\n    },\r\n    validateProvinceCity: {\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidProvinceEmpty }\r\n    },\r\n    validatePostContent: {\r\n      notEmpty: { status: false, message: this.compLanguage.createPostInvalidTopicEmpty }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private postService: PostService,\r\n    private serverService: ServerService,\r\n    private constant: ConstantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private user: UserService,\r\n    private language: LanguageService) { }\r\n\r\n  ngOnInit() {\r\n    // subscribe param change\r\n    this.route.params.subscribe((params: Params) => {\r\n      // check empty param or not\r\n      if (params['id'] !== undefined) {\r\n        this.postId = params['id'];\r\n      }\r\n      // check valid post Id or not\r\n      if (this.postId.length !== 24) {\r\n        if (this.postId === '') {\r\n          // if id === '', component load as create new post\r\n        } else {\r\n          // invalid Id => not-found\r\n          this.router.navigate(['/not-found']);\r\n        }\r\n      } else { // id.length == 24\r\n        this.isUpdate = true;\r\n        this.serverService.getOnePost(this.postId).subscribe((resData) => {\r\n          if (resData.data !== null && resData.data !== undefined) {\r\n            // if user is not the author of post => cant edit\r\n            if (this.user.currentUser._id !== resData.data.authorId) {\r\n              this.router.navigate(['/not-found']);\r\n            } else {\r\n              this.post = resData.data;\r\n            }\r\n          } else {\r\n            this.router.navigate(['/not-found']);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // subscribe when change language\r\n    this.language.hasChangeLanguage.asObservable().subscribe(() => {\r\n      this.compLanguage = this.language.currentLanguage;\r\n      this.changeLanguage();\r\n    });\r\n\r\n    // subscribe when hasNewImage\r\n    this.subscribeHasNewImage();\r\n    // subscribe when hasImgDeleted\r\n    this.subscribeHasImgDeleted();\r\n    // subscribe when has new change and need validate\r\n    this.postService.categoryChanged.asObservable().subscribe(() => {\r\n      this.alertContent = this.validateCategory();\r\n    });\r\n    this.postService.placeChanged.asObservable().subscribe(() => {\r\n      this.alertContent = this.validatePlace();\r\n    });\r\n    this.postService.provinceCityChanged.asObservable().subscribe(() => {\r\n      this.alertContent = this.validateProvinceCity();\r\n    });\r\n    this.postService.addressChanged.asObservable().subscribe(() => {\r\n      this.alertContent = this.validateAddress();\r\n    });\r\n    this.postService.postContentChanged.asObservable().subscribe(() => {\r\n      this.alertContent = this.validatePostContent();\r\n    });\r\n    this.postService.newAlert.asObservable().subscribe((location: string[]) => {\r\n      if (location.length >= 2) {\r\n        this.alertContent = this.validateObject[location[0]][location[1]]['message'];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description function subscribe for hasNewImage\r\n   * receive new image mean there may be an image be override\r\n   * we need remove the old file and push the new ones\r\n   */\r\n  subscribeHasNewImage() {\r\n    this.postService.hasNewImage.asObservable().subscribe(\r\n      (newImageInfo: { imgFile: File, contentId: string }) => {\r\n        // filt out old image file\r\n        this.newImageFiles = this.newImageFiles.filter((eachEle) => {\r\n          // only keep image of other postContent, remove image has deleted\r\n          return eachEle.contentId !== newImageInfo.contentId;\r\n        });\r\n        // store temporary new image on newImages array\r\n        // until user click \"save\", upload all to server\r\n        this.newImageFiles.push(newImageInfo);\r\n        // line below only for test\r\n        // this.uploadAllImage();\r\n      });\r\n  }\r\n\r\n  // function subscribe when hasImgDeleted\r\n  subscribeHasImgDeleted() {\r\n    this.postService.hasImgDeleted.asObservable().subscribe((postContentId: string) => {\r\n      this.newImageFiles = this.newImageFiles.filter((eachEle) => {\r\n        // only keep image of other postContent, remove image has deleted\r\n        return eachEle.contentId !== postContentId;\r\n      });\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    // get file of new image from event\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    // config reader to read file and show preview\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.post.cover = reader.result.toString();\r\n    };\r\n    reader.readAsDataURL(file);\r\n    // store image temporary in newImages arra\r\n    // this cover will be store on server when user click save\r\n    this.coverFile = file;\r\n    // reset the <input> file for the next time\r\n    (event.target as HTMLInputElement).value = '';\r\n  }\r\n\r\n  onSave() {\r\n    if (this.isSaved === true) {\r\n      this.alertContent = this.cantSavedAlertContent;\r\n      return;\r\n    }\r\n    // go to validate all form\r\n    this.validateAll();\r\n    if (this.postIsValid === true) {\r\n      // add cover to newImageFiles before upload all newImageFiles to server\r\n      if (this.coverFile !== null && this.coverFile !== undefined) {\r\n        this.newImageFiles.push({ imgFile: this.coverFile, contentId: 'cover' });\r\n      }\r\n      this.serverService.uploadImage(this.newImageFiles).subscribe((resData) => {\r\n        if (resData) {\r\n          // update all images url before save\r\n          this.newImageFiles.forEach((imageFileItem, index) => {\r\n            // find true postContent has this image to update url\r\n            const needUpdateImageUrl = this.post.postContents.find((eachEle) => {\r\n              return eachEle._id === imageFileItem.contentId;\r\n            });\r\n            if (needUpdateImageUrl !== null && needUpdateImageUrl !== undefined) {\r\n              needUpdateImageUrl.image = resData.imageUrls[index];\r\n            }\r\n          });\r\n          // update cover url, that url located at the end of the array\r\n          if (this.coverFile && resData.imageUrls[resData.imageUrls.length - 1]) {\r\n            this.post.cover = resData.imageUrls[resData.imageUrls.length - 1];\r\n          }\r\n          // save post, if id == '', => this is new post and need create new post\r\n          // if id already exist, => this is old post and need update post\r\n          if (this.postId === '') {\r\n            // fix some default infomation for new post\r\n            this.post._id = null;\r\n            this.post.createdTime = new Date();\r\n            this.post.approvedTime = null;\r\n            this.post.authorId = this.user.currentUser._id;\r\n            this.post.rating = [];\r\n            this.post.status = this.constant.POST_STATUS.PENDING;\r\n            this.serverService.postOnePost(this.post)\r\n              .subscribe((responseData) => {\r\n                if (responseData) {\r\n                  this.isSaved = true;\r\n                  this.postId = responseData.postId;\r\n                }\r\n              });\r\n          } else if (this.postId.length === 24) {\r\n            // save edited post\r\n            // fix some default infomation for update post\r\n            this.post.approvedTime = null;\r\n            this.post.status = this.constant.POST_STATUS.PENDING;\r\n            this.serverService.updateOnePost(this.post)\r\n              .subscribe((responseData) => {\r\n                if (responseData) {\r\n                  this.isSaved = true;\r\n                  this.postId = responseData.postId;\r\n                }\r\n              });\r\n          }\r\n        } else {\r\n          // can not get response\r\n        }\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n\r\n  onViewPost() {\r\n    this.router.navigate(['/view-post', this.postId]);\r\n  }\r\n\r\n  onLeaveImgPicker() {\r\n    this.alertContent = this.validateCover();\r\n  }\r\n\r\n  onDelImageClick() {\r\n    this.post.cover = '';\r\n    this.coverFile = null;\r\n    this.alertContent = this.validateCover();\r\n  }\r\n\r\n  onCancel() {\r\n    // on create new post\r\n    // this.router.navigate(['/create-post']);\r\n    this.post = new Post(null, null, [], [], '', '', '', new Location('', [], '', ''), [], [], '', [], '');\r\n\r\n    // on edit post\r\n    // if (this.postId.length === 24) {\r\n    //   this.serverService.getOnePost(this.postId).subscribe((resData) => {\r\n    //     if (resData.data !== null && resData.data !== undefined) {\r\n    //       this.post = resData.data;\r\n    //     } else {\r\n    //       this.router.navigate(['/not-found']);\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  onUpdateTitle(event: Event) {\r\n    // validate here\r\n    this.post.title = (event.target as HTMLInputElement).value;\r\n    this.alertContent = this.validateTitle();\r\n  }\r\n\r\n  onUpdateDescription(event: Event) {\r\n    // validate here\r\n    this.post.description = (event.target as HTMLTextAreaElement).value;\r\n    this.alertContent = this.validateDescription();\r\n  }\r\n\r\n  changeLanguage() {\r\n    this.validateObject.validateTitle.notEmpty.message = this.compLanguage.createPostInvalidTitleEmpty;\r\n    this.validateObject.validateTitle.maxLength.message = this.compLanguage.createPostInvalidTitleLength;\r\n    this.validateObject.validateDesc.maxLength.message = this.compLanguage.createPostInvalidDescLength;\r\n    this.validateObject.validateDesc.notEmpty.message = this.compLanguage.createPostInvalidDescEmpty;\r\n    this.validateObject.validateCover.notEmpty.message = this.compLanguage.createPostInvalidCoverEmpty;\r\n    this.validateObject.validateCategory.notEmpty.message = this.compLanguage.createPostInvalidCategoryEmpty;\r\n    this.validateObject.validateTag.maxLength.message = this.compLanguage.createPostInvalidTagLength;\r\n    this.validateObject.validatePlace.maxLength.message = this.compLanguage.createPostInvalidPlaceLength;\r\n    this.validateObject.validatePlace.notEmpty.message = this.compLanguage.createPostInvalidPlaceEmpty;\r\n    this.validateObject.validateAddress.maxLength.message = this.compLanguage.createPostInvalidAddressLength;\r\n    this.validateObject.validateProvinceCity.notEmpty.message = this.compLanguage.createPostInvalidProvinceEmpty;\r\n    this.validateObject.validatePostContent.notEmpty.message = this.compLanguage.createPostInvalidTopicEmpty;\r\n    this.cantSavedAlertContent = this.compLanguage.createPostAlertSaveAlready;\r\n    this.savedSuccessAlertContent = this.compLanguage.createPostAlertSaveSuccess;\r\n  }\r\n\r\n  validateAll() {\r\n    this.alertContent =\r\n      this.validateTitle() + '\\n'\r\n      + this.validateDescription() + '\\n'\r\n      + this.validateCover() + '\\n'\r\n      + this.validateCategory() + '\\n'\r\n      + this.validatePlace() + '\\n'\r\n      + this.validateProvinceCity() + '\\n'\r\n      + this.validateAddress() + '\\n'\r\n      + this.validatePostContent();\r\n    this.alertContent = this.alertContent.replace(/\\n+/g, '\\n');\r\n    this.alertContent = this.alertContent.trim();\r\n    if (this.alertContent === '') {\r\n      this.postIsValid = true;\r\n    } else {\r\n      this.postIsValid = false;\r\n    }\r\n  }\r\n\r\n  validateTitle() {\r\n    if (this.post.title.length <= 0) {\r\n      this.validateObject.validateTitle.notEmpty.status = false;\r\n      this.validateObject.validateTitle.maxLength.status = true;\r\n      return this.validateObject.validateTitle.notEmpty.message;\r\n    } else if (this.post.title.length > 200) {\r\n      this.validateObject.validateTitle.notEmpty.status = true;\r\n      this.validateObject.validateTitle.maxLength.status = false;\r\n      return this.validateObject.validateTitle.maxLength.message;\r\n    } else {\r\n      this.validateObject.validateTitle.notEmpty.status = true;\r\n      this.validateObject.validateTitle.maxLength.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validateDescription() {\r\n    if (this.post.description.length <= 0) {\r\n      this.validateObject.validateDesc.notEmpty.status = false;\r\n      this.validateObject.validateDesc.maxLength.status = true;\r\n      return this.validateObject.validateDesc.notEmpty.message;\r\n    } else if (this.post.title.length > 500) {\r\n      this.validateObject.validateDesc.notEmpty.status = true;\r\n      this.validateObject.validateDesc.maxLength.status = false;\r\n      return this.validateObject.validateDesc.maxLength.message;\r\n    } else {\r\n      this.validateObject.validateDesc.notEmpty.status = true;\r\n      this.validateObject.validateDesc.maxLength.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validateCover() {\r\n    if (!this.coverFile && !this.isUpdate) {\r\n      this.validateObject.validateCover.notEmpty.status = false;\r\n      return this.validateObject.validateCover.notEmpty.message;\r\n    } else {\r\n      this.validateObject.validateCover.notEmpty.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validatePostContent() {\r\n    if (this.post.postContents.length <= 0) {\r\n      this.validateObject.validatePostContent.notEmpty.status = false;\r\n      return this.validateObject.validatePostContent.notEmpty.message;\r\n    } else {\r\n      this.validateObject.validatePostContent.notEmpty.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validateCategory() {\r\n    if (this.post.categories.length <= 0) {\r\n      this.validateObject.validateCategory.notEmpty.status = false;\r\n      return this.validateObject.validateCategory.notEmpty.message;\r\n    } else {\r\n      this.validateObject.validateCategory.notEmpty.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validatePlace() {\r\n    if (this.post.location.locationName.length <= 0) {\r\n      this.validateObject.validatePlace.notEmpty.status = false;\r\n      this.validateObject.validatePlace.maxLength.status = true;\r\n      return this.validateObject.validatePlace.notEmpty.message;\r\n    } else if (this.post.location.locationName.length > 200) {\r\n      this.validateObject.validatePlace.notEmpty.status = true;\r\n      this.validateObject.validatePlace.maxLength.status = false;\r\n      return this.validateObject.validatePlace.maxLength.message;\r\n    } else {\r\n      this.validateObject.validatePlace.notEmpty.status = true;\r\n      this.validateObject.validatePlace.maxLength.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validateProvinceCity() {\r\n    if (this.post.location.provinceCity.length <= 0) {\r\n      this.validateObject.validateProvinceCity.notEmpty.status = false;\r\n      return this.validateObject.validateProvinceCity.notEmpty.message;\r\n    } else {\r\n      this.validateObject.validateProvinceCity.notEmpty.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  validateAddress() {\r\n    if (this.post.location.address.length > 300) {\r\n      this.validateObject.validateAddress.maxLength.status = false;\r\n      return this.validateObject.validateAddress.maxLength.message;\r\n    } else {\r\n      this.validateObject.validateAddress.maxLength.status = true;\r\n      return '';\r\n    }\r\n  }\r\n\r\n  onTest() {\r\n    this.router.navigate(['/create-post', '5c1a4602f0491d2a9c8a2ff7']);\r\n  }\r\n}\r\n","module.exports = \"<!-- row1 has label, dropdown and button Add -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-2 col-md-3 col-2\\\">\\r\\n    <label>{{ compLanguage.createPostTag }}</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-8 col-md-6 col-10\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"compLanguage.createPostTagPlaceholder\\\" #inputTag (keyup)=\\\"onPressEnter($event)\\\"\\r\\n      maxlength=\\\"40\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-2 col-md-3 col-12 mt-3 mt-md-0\\\">\\r\\n    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"onAddTag(inputTag)\\\">{{ compLanguage.createPostAddTagBtn }}</button>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- row2 has list all tags added, each tags can be deleted by a 'X' button on top-right -->\\r\\n<div class=\\\"row\\\" *ngIf=\\\"post.tags.length > 0\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"tag\\\" *ngFor=\\\"let tag of post.tags\\\">\\r\\n      {{ tag.tagContent }}<span class=\\\"fas fa-times-circle esc-btn\\\" (click)=\\\"onRemoveTag(tag)\\\"></span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"input {\\n  width: 100%;\\n  height: auto;\\n  font-size: 17px; }\\n\\nlabel {\\n  font-size: 17px;\\n  font-weight: bold; }\\n\\n.tag {\\n  font-size: 14px;\\n  font-weight: bold;\\n  margin-top: 15px;\\n  margin-right: 15px;\\n  padding: 10px;\\n  background-color: lightgray;\\n  border-color: transparent;\\n  border-radius: 2rem;\\n  cursor: default;\\n  overflow: visible;\\n  position: relative;\\n  display: inline-block; }\\n\\n.esc-btn {\\n  font-size: 14px;\\n  position: absolute;\\n  top: -6px;\\n  right: -6px;\\n  cursor: pointer; }\\n\\nbutton {\\n  width: 100%;\\n  font-size: 17px;\\n  font-weight: bold; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Tag } from 'src/app/model/tag.model';\r\nimport { TagService } from 'src/app/core/services/tag.service';\r\nimport { Post } from 'src/app/model/post.model';\r\nimport { PostService } from 'src/app/core/services/post.service';\r\n\r\n@Component({\r\n  selector: 'app-create-tag',\r\n  templateUrl: './create-tag.component.html',\r\n  styleUrls: ['./create-tag.component.scss']\r\n})\r\nexport class CreateTagComponent implements OnInit {\r\n  // @Input() tags: Tag[] = [];\r\n  @Input() post: Post;\r\n  @Input() compLanguage;\r\n  // all tag from server to recommend with user\r\n  private allTags: Tag[] = [];\r\n\r\n  constructor(private tagService: TagService, private postService: PostService) { }\r\n\r\n  ngOnInit() {\r\n    this.tagService.newTagsUpdated.asObservable().subscribe(() => {\r\n      // update tags same as data on service\r\n      this.allTags = this.tagService.tags;\r\n    });\r\n  }\r\n\r\n  onRemoveTag(removedTag: Tag) {\r\n    this.post.tags = this.post.tags.filter((eachEle) => {\r\n      return eachEle.tagContent !== removedTag.tagContent;\r\n      //   // return eachEle._id !== removedCategory._id;\r\n    });\r\n    // console.log(this.tags);\r\n  }\r\n\r\n  onAddTag(inputTagElement: HTMLInputElement) {\r\n    const newTag = new Tag(inputTagElement.value);\r\n    // if tag empty => go out\r\n    if (newTag.tagContent.length <= 0) {\r\n      return;\r\n    }\r\n    // if tag too long => alert\r\n    if (newTag.tagContent.length > 40) {\r\n      // emit location of message: create-post.component.validateObject.validateTag.maxLength.message\r\n      this.postService.newAlert.next(['validateTag', 'maxLength']);\r\n      return;\r\n    }\r\n    const duplicateTag = this.post.tags.find((eachEle) => {\r\n      return eachEle.tagContent === newTag.tagContent;\r\n    });\r\n    // if duplicateTag != null mean newTag already exist, don't need to add again\r\n    if (duplicateTag === null || duplicateTag === undefined) {\r\n      newTag._id = '';\r\n      this.post.tags.push(newTag);\r\n    }\r\n    // console.log(this.tags);\r\n  }\r\n\r\n  onPressEnter(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.onAddTag(event.target as HTMLInputElement);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServerService } from './server.service';\r\nimport { PostCategory } from 'src/app/model/postCategory.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostCategoryService {\r\n  allCategories: PostCategory[] = [];\r\n  newCategoriesUpdated = new Subject();\r\n\r\n  constructor(private http: HttpClient, private server: ServerService) { }\r\n\r\n  getAllCategories() {\r\n    // if (this.allCategories.length === 0) {\r\n    this.server.getListPostCategories().subscribe((resData => {\r\n      if (resData.data !== undefined && resData.data !== null) {\r\n        this.allCategories = resData.data;\r\n        this.newCategoriesUpdated.next();\r\n      }\r\n      // else err handling\r\n    }));\r\n    // }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProvinceCity } from 'src/app/model/province-city.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServerService } from './server.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvinceCityService {\r\n  allProvinceCity: ProvinceCity[] = [];\r\n\r\n  constructor(private http: HttpClient, private server: ServerService) { }\r\n\r\n  getAllProvinceCity() {\r\n    return this.server.getListProvinceCity();\r\n    // .subscribe((resData) => {\r\n    //   if (resData.data) {\r\n    //     this.allProvinceCity = resData.data;\r\n    //   }\r\n    //   // else err handling\r\n    // });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Tag } from 'src/app/model/tag.model';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServerService } from './server.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagService {\r\n  tags: Tag[] = [];\r\n  // create an Observable will emit when has new change\r\n  newTagsUpdated = new Subject();\r\n\r\n  constructor(private http: HttpClient, private server: ServerService) { }\r\n\r\n  getAllTags() {\r\n    this.server.getListTags().subscribe((resData => {\r\n      if (resData.data) {\r\n        this.tags = resData.data;\r\n        this.newTagsUpdated.next();\r\n      }\r\n      // else err handling\r\n    }));\r\n  }\r\n\r\n  updateTags() {\r\n\r\n  }\r\n}\r\n","export class Tag {\r\n    public _id: string;\r\n    public tagContent: string;\r\n\r\n    constructor(tagContent: string) {\r\n        this.tagContent = tagContent;\r\n    }\r\n}\r\n"],"sourceRoot":""}